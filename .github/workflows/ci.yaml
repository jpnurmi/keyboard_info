name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: beta
    - name: Install dependencies
      run: flutter pub get
    - name: Analyze
      run: flutter analyze
    - name: Format
      run: flutter format --set-exit-if-changed .
    - name: Publish dry-run
      run: flutter pub publish --dry-run

  coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: beta
    - name: Measure coverage
      run: flutter test --coverage
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: coverage/lcov.info
        token: ${{secrets.CODECOV_TOKEN}}

  desktop:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.os}}
    continue-on-error: true
    steps:
    - name: Git checkout
      uses: actions/checkout@v1
    - name: Setup environment (Ubuntu)
      run: |
        sudo apt install -y cmake libgtk-3-dev liblzma-dev ninja-build pkg-config xvfb
        echo "XKBLAYOUT=fi" > keyboard
        sudo mv keyboard /etc/default
      if: matrix.os == 'ubuntu-latest'
    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: beta
    - name: Configure Flutter
      run: flutter config --enable-linux-desktop --enable-macos-desktop --enable-windows-desktop --no-enable-web
    - name: Install dependencies
      run: flutter pub get
    - name: Run tests
      run: flutter test
    - name: Run integration tests (Ubuntu)
      run: xvfb-run -a flutter drive -v --driver=test_driver/integration_test.dart --target=integration_test/keyboard_info_integration_test.dart
      working-directory: example
      if: matrix.os == 'ubuntu-latest'
    - name: Run integration tests (macOS & Windows)
      run: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/keyboard_info_integration_test.dart
      working-directory: example
      if: matrix.os != 'ubuntu-latest'
    - name: Build (macOS)
      run: flutter build macos
      working-directory: example
      if: matrix.os == 'macos-latest'
    - name: Build (Ubuntu)
      run: flutter build linux
      working-directory: example
      if: matrix.os == 'ubuntu-latest'
    - name: Build (Windows)
      run: flutter build windows
      working-directory: example
      if: matrix.os == 'windows-latest'

  mobile:
    strategy:
      matrix:
        os: [android, ios]
    runs-on: ${{matrix.os}}
    continue-on-error: true
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Setup Flutter
      uses: subosito/flutter-action@v1
    - name: Configure Flutter
      run: flutter config --no-enable-macos-desktop --no-enable-web
    - name: Install dependencies
      run: flutter pub get
    - name: Run tests
      run: flutter test
    - name: Run integration tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: cd example && flutter drive -v --driver=test_driver/integration_test.dart --target=integration_test/keyboard_info_integration_test.dart
    - name: Build (Android)
      run: flutter build apk
      working-directory: example
      if: matrix.os == 'android'
    - name: Build (iOS)
      run: flutter build ios --release --no-codesign
      working-directory: example
      if: matrix.os == 'ios'
